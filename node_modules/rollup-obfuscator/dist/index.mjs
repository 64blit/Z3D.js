var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });

// src/index.ts
import { createFilter } from "@rollup/pluginutils";
import Obfuscator from "javascript-obfuscator";
function obfuscator(options = { global: true }) {
  const filter = createFilter(
    options.include || ["**/*.js", "**/*.ts"],
    options.exclude || ["node_modules/**"]
  );
  if (options.global != true && options.global != false) {
    options.global = true;
  }
  return {
    name: "obfuscator",
    transform: options.global ? void 0 : (code, id) => {
      if (!filter(id))
        return null;
      const obfuscated = Obfuscator.obfuscate(code, {
        ...options,
        inputFileName: id
      });
      return {
        code: obfuscated.getObfuscatedCode(),
        map: options.sourceMap ? obfuscated.getSourceMap() : void 0
      };
    },
    renderChunk: options.global ? (code, { fileName }) => {
      const obfuscated = Obfuscator.obfuscate(code, {
        ...options,
        inputFileName: fileName
      });
      return {
        code: obfuscated.getObfuscatedCode(),
        map: options.sourceMap ? obfuscated.getSourceMap() : void 0
      };
    } : void 0
  };
}
__name(obfuscator, "obfuscator");
export {
  obfuscator
};
